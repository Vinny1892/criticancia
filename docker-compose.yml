version: "3"
services:
    frontend:
      build:
        context: .
        dockerfile: ./frontend/event-feedback/docker/dockerfile.dev
      volumes:
        - ./frontend/event-feedback:/usr/app
        - /usr/app/node_modules
      ports:
        - 3000:3000
      environment: 
        - API_URL=http://localhost:8080
      networks:
        network-feedbackevent:
          ipv4_address: 172.70.0.7
    backend:
        build:
            context: .
            dockerfile: ./server/event-feedback/docker/dockerfile.dev
        volumes:
            - ./server/event-feedback:/var/www/html
            - /var/www/html/vendor
        ports:
            - 8080:80
        networks:
            network-feedbackevent:
                ipv4_address: 172.70.0.8
    redis:
        image: redis
        ports:
            - 6379:6379
        command: redis-server --requirepass seila123  --appendonly yes
        networks:
            network-feedbackevent:
                ipv4_address: 172.70.0.6
    postgres:
        image: postgres
        ports:
            - 5432:5432
        environment:
            POSTGRES_DB: "app"
            POSTGRES_USER: "user"
            POSTGRES_PASSWORD: "rootPassword"

        networks:
            network-feedbackevent:
                ipv4_address: 172.70.0.15
networks:
    network-feedbackevent:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 172.70.0.0/24

