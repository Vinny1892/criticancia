version: "3"
services:
    frontend:
        image: vinny1892/eventfeedback-frontend
        ports:
            - 80:3000
        config:
            - source: config_appfrontend
              target: /usr/src/app/
        deploy:
            mode: replicated
            replicas: 4
            placement:
                constraints: [node.role == worker]
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s
            update_config:
                parallelism: 2
                delay: 10s
                failure_action: continue
                monitor: 60s
                max_failure_ratio: 0.3
        networks:
            - feedbackevent

    backend:
        image: vinny1892/eventfeedback-backend
        ports:
            - 32566:80
        depends_on:
            - postgres
        deploy:
            mode: replicated
            replicas: 4
            placement: 
                constraints: [node.role == worker]
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s
            update_config:
                parallelism: 2
                delay: 10s
                failure_action: continue
                monitor: 60s
                max_failure_ratio: 0.3
        networks:
            - feedbackevent
    redis:
        image: redis
        ports:
            - 6379:6379
        deploy:
            placement:
                constraints: [node.role == manager]
        command: redis-server --requirepass seila123  --appendonly yes
        networks:
            - feedbackevent
    postgres:
        image: postgres
        ports:
            - 5432:5432
        environment:
            POSTGRES_DB: "app"
            POSTGRES_USER: "user"
            POSTGRES_PASSWORD: "rootPassword"
        deploy:
            placement:
                constraints: [node.role == manager]
        networks:
            - feedbackevent
configs:
    config_prometheus:
        file: /opt/app/criticancia
volumes:
    env_frontend:
        driver: rexray
    postgres:
        driver: rexray
    app-backend:
        driver: rexray
    app-frontend:
        driver: rexray
networks:
    feedbackevent:
    
